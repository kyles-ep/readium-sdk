apply plugin: 'com.android.model.library'

def ndk_skipX86 = (rootProject.hasProperty("readium_ndk_skipX86") && rootProject.readium_ndk_skipX86)
def ndk_skipARM = (rootProject.hasProperty("readium_ndk_skipARM") && rootProject.readium_ndk_skipARM)
def ndk_skipARM64 = (rootProject.hasProperty("readium_ndk_skipARM64") && rootProject.readium_ndk_skipARM64)
def ndk_clang = (rootProject.hasProperty("readium_ndk_clang") && rootProject.readium_ndk_clang)
def ndk_experimental = (rootProject.hasProperty("readium_ndk_experimental") && rootProject.readium_ndk_experimental)

model {
    android {
        compileSdkVersion = 26
        buildToolsVersion = "27.0.3"

        defaultConfig {

            // manifest@package attribute in src/main/AndroidManifest.xml
            // applicationId = "org.readium.sdk.android"

            // manifest/uses-sdk@android:minSdkVersion attribute in src/main/AndroidManifest.xml
            minSdkVersion.apiLevel = 19

            // manifest/uses-sdk@android:targetSdkVersion attribute in src/main/AndroidManifest.xml
            targetSdkVersion.apiLevel = 26

            // manifest@android:versionCode attribute in src/main/AndroidManifest.xml
            versionCode 30

            // manifest@android:versionName attribute in src/main/AndroidManifest.xml
            versionName "1.30"
        }

        sources {
            main {
                java {
                    source {
                        srcDirs = [ './src/main/java' ]
                    }
                }

                jniLibs {
                    dependencies {
                        project ":epub3"
                    }
                }
            }
        }

        buildTypes {
            debug {
                minifyEnabled = false
            }
            release {
                minifyEnabled = false
            }
        }

        productFlavors {
            if (!ndk_skipARM)
                create("arm") {
                    ndk.with {
                        abiFilters.add("armeabi-v7a")
                    }
                }

            if (!ndk_skipX86)
                create("x86") {
                    ndk.with {
                        abiFilters.add("x86")
                    }
                }

            if (!ndk_skipARM64)
                create("arm64") {
                    ndk.with {
                        abiFilters.add("arm64-v8a")
                    }
                }
        }
    }
}
